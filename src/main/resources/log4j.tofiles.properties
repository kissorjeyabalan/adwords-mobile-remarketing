# Copyright 2011, Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The Google Ads API Java Client Library uses the slf4j logging facade, allowing
# you to plug in a logging framework of your choice. This configuration file
# sets up the logging infrastructure using log4j. If you wish to take advantage
# of this file and use log4j as your framework, you must include both the log4j
# artifact and the artifact to bridge slf4j with log4j. Please see
# http://www.slf4j.org for more information about slf4j.
#
# See the Google Ads API Java Client Library Logging page for more details:
# https://github.com/googleads/googleads-java-lib/wiki/Logging

# Point each log to its appender. The first word after the equals sign
# represents the level of logging for each log.
log4j.category.com.google.api.ads.adwords.lib.client.AdWordsServiceClient.soapXmlLogger=INFO, SOAP_LOG, CONSOLE
log4j.category.com.google.api.ads.adwords.lib.client.AdWordsServiceClient.requestInfoLogger=INFO, REQUEST_LOG, CONSOLE
log4j.category.com.google.api.ads.adwords.lib.utils.report_download=INFO, REPORT_LOG, CONSOLE
log4j.category.com.google.api.ads.adwords.lib.utils.batch_job=INFO, BATCH_JOB_LOG, CONSOLE

# Set the default logger for everything else to be no logs. This prevents all of
# the Axis libraries from complaining that no log is specified for them.
log4j.rootLogger=off

log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
# Configure the console logger to write to stderr since examples write
# important messages to stdout.
log4j.appender.CONSOLE.Target=System.err
log4j.appender.CONSOLE.Threshold=INFO
log4j.appender.CONSOLE.layout.ConversionPattern=[%d{DATE}-%c{1}:%p:%t] %m%n

log4j.appender.SOAP_LOG=org.apache.log4j.RollingFileAppender
log4j.appender.SOAP_LOG.File=soap.log
log4j.appender.SOAP_LOG.MaxFileSize=20000KB
log4j.appender.SOAP_LOG.MaxBackupIndex=10
log4j.appender.SOAP_LOG.layout=org.apache.log4j.PatternLayout
log4j.appender.SOAP_LOG.layout.ConversionPattern=***********%n%d %5p %C{1}: %n***********%n%m%n

log4j.appender.REQUEST_LOG=org.apache.log4j.RollingFileAppender
log4j.appender.REQUEST_LOG.File=request.log
log4j.appender.REQUEST_LOG.MaxFileSize=20000KB
log4j.appender.REQUEST_LOG.MaxBackupIndex=10
log4j.appender.REQUEST_LOG.layout=org.apache.log4j.PatternLayout
log4j.appender.REQUEST_LOG.layout.ConversionPattern=***********%n%d %5p %C{1}: %n***********%n%m%n

log4j.appender.REPORT_LOG=org.apache.log4j.RollingFileAppender
log4j.appender.REPORT_LOG.File=report.log
log4j.appender.REPORT_LOG.MaxFileSize=20000KB
log4j.appender.REPORT_LOG.MaxBackupIndex=10
log4j.appender.REPORT_LOG.layout=org.apache.log4j.PatternLayout
log4j.appender.REPORT_LOG.layout.ConversionPattern=***********%n%d %5p %C{1}: %n***********%n%m%n

log4j.appender.BATCH_JOB_LOG=org.apache.log4j.RollingFileAppender
log4j.appender.BATCH_JOB_LOG.File=batchjob.log
log4j.appender.BATCH_JOB_LOG.MaxFileSize=20000KB
log4j.appender.BATCH_JOB_LOG.MaxBackupIndex=10
log4j.appender.BATCH_JOB_LOG.layout=org.apache.log4j.PatternLayout
log4j.appender.BATCH_JOB_LOG.layout.ConversionPattern=***********%n%d %5p %C{1}: %n***********%n%m%n
